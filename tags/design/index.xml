<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>design on Jacob Hell's Blog</title><link>https://jacobhell.github.io/tags/design/</link><description>Recent content in design on Jacob Hell's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 25 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://jacobhell.github.io/tags/design/index.xml" rel="self" type="application/rss+xml"/><item><title>The Chain of Responsibility Pattern Makes Hard Validation Easy</title><link>https://jacobhell.github.io/post/intro-chain-of-responsibility/</link><pubDate>Wed, 25 Mar 2020 00:00:00 +0000</pubDate><guid>https://jacobhell.github.io/post/intro-chain-of-responsibility/</guid><description>&lt;p>I like my validation workflow the same way I like my IKEA tables. Easy to setup and with a cool name. Though the Chain of Responsibility is no &lt;a href="https://www.ikea.com/us/en/p/godfjord-bed-frame-gray-s99256172/">Godfjord&lt;/a>, it is pretty easy to use.&lt;/p>
&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>Hello professional computer touchers.&lt;/p>
&lt;p>A great &lt;a href="https://refactoring.guru/design-patterns/chain-of-responsibility">intro&lt;/a> has already been written for Chain of Responsibility. I highly recommend Refactoring.Guru for their other articles too.&lt;/p>
&lt;h2 id="my-two-problems">My Two Problems&lt;/h2>
&lt;p>I&amp;rsquo;ve got a backend written in Java that takes in a username and password. This backend authenticates users and returns a token.&lt;/p>
&lt;p>I was happy to get it done and it was easy to implement. Unfortunately my happiness was short-lived. Because my site is now under &lt;strong>attack&lt;/strong> by hackers.&lt;/p>
&lt;p>If that wasn&amp;rsquo;t bad enough, I forgot to pay the bill for the VPS hosting my database. Now they&amp;rsquo;ve downgraded my service.&lt;/p>
&lt;h2 id="the-solutions">The Solutions&lt;/h2>
&lt;p>Here&amp;rsquo;s what I&amp;rsquo;ve got to do:&lt;/p>
&lt;ol>
&lt;li>Prevent the usernames of known hackers from logging in.&lt;/li>
&lt;li>Cache authenticated usernames for less DB reads.&lt;/li>
&lt;/ol>
&lt;h2 id="the-pojos">The POJOs&lt;/h2>
&lt;p>The POJO that stores the authentication request:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">UserAuthenticationRequest&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">private&lt;/span> String username&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">private&lt;/span> String password&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">UserAuthenticationRequest&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String username&lt;span style="color:#f92672">,&lt;/span> String password&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">username&lt;/span> &lt;span style="color:#f92672">=&lt;/span> username&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">password&lt;/span> &lt;span style="color:#f92672">=&lt;/span> password&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">getUsername&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> username&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">getPassword&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> password&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The POJO that stores the authentication response:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">UserAuthenticationResult&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">private&lt;/span> String token&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">private&lt;/span> String username&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> authenticated&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">getUsername&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> username&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setUsername&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String username&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">username&lt;/span> &lt;span style="color:#f92672">=&lt;/span> username&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">getToken&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> token&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setToken&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String token&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">token&lt;/span> &lt;span style="color:#f92672">=&lt;/span> token&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">isAuthenticated&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> authenticated&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setAuthenticated&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">boolean&lt;/span> authenticated&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">authenticated&lt;/span> &lt;span style="color:#f92672">=&lt;/span> authenticated&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">()&lt;/span>
&lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Username: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> username
&lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;\nToken: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> token
&lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;\nIsAuthenticated: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> authenticated&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="chain-of-responsibility-implementation">Chain of Responsibility Implementation&lt;/h2>
&lt;p>The Chain of Responsibility pattern first needs an abstract &lt;code>Handler&lt;/code> class. My other Handlers will extend from this class.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">abstract&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">UserAuthenticationHandler&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">private&lt;/span> UserAuthenticationHandler next&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">UserAuthenticationHandler&lt;/span>&lt;span style="color:#f92672">(&lt;/span>UserAuthenticationHandler next&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">next&lt;/span> &lt;span style="color:#f92672">=&lt;/span> next&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> UserAuthenticationResult &lt;span style="color:#a6e22e">handleUserCredentials&lt;/span>&lt;span style="color:#f92672">(&lt;/span>UserAuthenticationRequest request&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> next&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">handleUserCredentials&lt;/span>&lt;span style="color:#f92672">(&lt;/span>request&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Should do the trick.&lt;/p>
&lt;p>Let&amp;rsquo;s write some code to deal with those pesky hackers. The handler should return a UserAuthenticationResult with authenticate set to &lt;code>false&lt;/code> if they are up to no good.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">UsernameBannedHandler&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> UserAuthenticationHandler &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">private&lt;/span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">&amp;gt;&lt;/span> bannedUsernames&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">UsernameBannedHandler&lt;/span>&lt;span style="color:#f92672">(&lt;/span>UserAuthenticationHandler next&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">super&lt;/span>&lt;span style="color:#f92672">(&lt;/span>next&lt;span style="color:#f92672">);&lt;/span>
bannedUsernames &lt;span style="color:#f92672">=&lt;/span> List&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">of&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jakehell&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;bannedUser&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;jakehell2&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> UserAuthenticationResult &lt;span style="color:#a6e22e">handleUserCredentials&lt;/span>&lt;span style="color:#f92672">(&lt;/span>UserAuthenticationRequest request&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>isUsernameBanned&lt;span style="color:#f92672">(&lt;/span>request&lt;span style="color:#f92672">))&lt;/span>
&lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> getAuthenticationFailureResult&lt;span style="color:#f92672">(&lt;/span>request&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">super&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">handleUserCredentials&lt;/span>&lt;span style="color:#f92672">(&lt;/span>request&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">isUsernameBanned&lt;/span>&lt;span style="color:#f92672">(&lt;/span>UserAuthenticationRequest request&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> bannedUsernames&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">contains&lt;/span>&lt;span style="color:#f92672">(&lt;/span>request&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getUsername&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">private&lt;/span> UserAuthenticationResult &lt;span style="color:#a6e22e">getAuthenticationFailureResult&lt;/span>&lt;span style="color:#f92672">(&lt;/span>UserAuthenticationRequest request&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#f92672">{&lt;/span>
UserAuthenticationResult result &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> UserAuthenticationResult&lt;span style="color:#f92672">();&lt;/span>
result&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setUsername&lt;/span>&lt;span style="color:#f92672">(&lt;/span>request&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getUsername&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
result&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setAuthenticated&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> result&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>That takes care of my first problem.&lt;/p>
&lt;p>Now to check if the username is cached. This handler should return the cached username and token.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">UserCachedHandler&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> UserAuthenticationHandler &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">private&lt;/span> Map&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">,&lt;/span> String&lt;span style="color:#f92672">&amp;gt;&lt;/span> usernameToken&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">UserCachedHandler&lt;/span>&lt;span style="color:#f92672">(&lt;/span>UserAuthenticationHandler next&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">super&lt;/span>&lt;span style="color:#f92672">(&lt;/span>next&lt;span style="color:#f92672">);&lt;/span>
usernameToken &lt;span style="color:#f92672">=&lt;/span> Map&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">of&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;cachedUser&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;cachedUserToken&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;jakehell4&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;token5&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> UserAuthenticationResult &lt;span style="color:#a6e22e">handleUserCredentials&lt;/span>&lt;span style="color:#f92672">(&lt;/span>UserAuthenticationRequest request&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#f92672">{&lt;/span>
String username &lt;span style="color:#f92672">=&lt;/span> request&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getUsername&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>usernameToken&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">containsKey&lt;/span>&lt;span style="color:#f92672">(&lt;/span>username&lt;span style="color:#f92672">))&lt;/span>
&lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> getSuccessfulUserAuthenticationResult&lt;span style="color:#f92672">(&lt;/span>username&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">super&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">handleUserCredentials&lt;/span>&lt;span style="color:#f92672">(&lt;/span>request&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> UserAuthenticationResult &lt;span style="color:#a6e22e">getSuccessfulUserAuthenticationResult&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String username&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#f92672">{&lt;/span>
UserAuthenticationResult result &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> UserAuthenticationResult&lt;span style="color:#f92672">();&lt;/span>
result&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setUsername&lt;/span>&lt;span style="color:#f92672">(&lt;/span>username&lt;span style="color:#f92672">);&lt;/span>
result&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setToken&lt;/span>&lt;span style="color:#f92672">(&lt;/span>usernameToken&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>username&lt;span style="color:#f92672">));&lt;/span>
result&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setAuthenticated&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> result&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lastly, I need to actually try to authenticate the user.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">AuthenticateUserHandler&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> UserAuthenticationHandler &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">AuthenticateUserHandler&lt;/span>&lt;span style="color:#f92672">(&lt;/span>UserAuthenticationHandler next&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">super&lt;/span>&lt;span style="color:#f92672">(&lt;/span>next&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> UserAuthenticationResult &lt;span style="color:#a6e22e">handleUserCredentials&lt;/span>&lt;span style="color:#f92672">(&lt;/span>UserAuthenticationRequest request&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>authenticateUser&lt;span style="color:#f92672">(&lt;/span>request&lt;span style="color:#f92672">))&lt;/span>
&lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> createSuccessfulResult&lt;span style="color:#f92672">(&lt;/span>request&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">super&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">handleUserCredentials&lt;/span>&lt;span style="color:#f92672">(&lt;/span>request&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">authenticateUser&lt;/span>&lt;span style="color:#f92672">(&lt;/span>UserAuthenticationRequest request&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>request&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getUsername&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;authenticatedUser&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> request&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getPassword&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span>
&lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">private&lt;/span> UserAuthenticationResult &lt;span style="color:#a6e22e">createSuccessfulResult&lt;/span>&lt;span style="color:#f92672">(&lt;/span>UserAuthenticationRequest request&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#f92672">{&lt;/span>
UserAuthenticationResult result &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> UserAuthenticationResult&lt;span style="color:#f92672">();&lt;/span>
result&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setAuthenticated&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
result&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setUsername&lt;/span>&lt;span style="color:#f92672">(&lt;/span>request&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getUsername&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
result&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setToken&lt;/span>&lt;span style="color:#f92672">(&lt;/span>generateToken&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> result&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">private&lt;/span> String &lt;span style="color:#a6e22e">generateToken&lt;/span>&lt;span style="color:#f92672">()&lt;/span>
&lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;token&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For some reason, only &lt;code>authenticatedUser&lt;/code> can login. Oh well, different problem for a different day.&lt;/p>
&lt;h2 id="creating-the-chain">Creating the Chain&lt;/h2>
&lt;p>Here is the chain:&lt;/p>
&lt;p>&lt;code>UsernameBannedHandler -&amp;gt; UserCachedHandler -&amp;gt; UserAuthenticationHandler&lt;/code>&lt;/p>
&lt;p>I also put &lt;code>ForceAuthenticationFailureHandler&lt;/code> after &lt;code>UserAuthenticationHandler&lt;/code>. Since authentication failed if it got to that handler.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">[]&lt;/span> args&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
ForceAuthenticationFailureHandler forceAuthenticationFailureHandler &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ForceAuthenticationFailureHandler&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
AuthenticateUserHandler authenticateUserHandler &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> AuthenticateUserHandler&lt;span style="color:#f92672">(&lt;/span>forceAuthenticationFailureHandler&lt;span style="color:#f92672">);&lt;/span>
UserCachedHandler userCachedHandler &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> UserCachedHandler&lt;span style="color:#f92672">(&lt;/span>authenticateUserHandler&lt;span style="color:#f92672">);&lt;/span>
UsernameBannedHandler usernameBannedHandler &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> UsernameBannedHandler&lt;span style="color:#f92672">(&lt;/span>userCachedHandler&lt;span style="color:#f92672">);&lt;/span>
UserAuthenticationRequest banned &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> UserAuthenticationRequest&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;bannedUser&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
UserAuthenticationRequest cached &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> UserAuthenticationRequest&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;cachedUser&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
UserAuthenticationRequest authenticated &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> UserAuthenticationRequest&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;authenticatedUser&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
UserAuthenticationRequest failure &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> UserAuthenticationRequest&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;authenticateFailure&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
UserAuthenticationResult bannedResult &lt;span style="color:#f92672">=&lt;/span> usernameBannedHandler&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">handleUserCredentials&lt;/span>&lt;span style="color:#f92672">(&lt;/span>banned&lt;span style="color:#f92672">);&lt;/span>
UserAuthenticationResult cachedResult &lt;span style="color:#f92672">=&lt;/span> usernameBannedHandler&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">handleUserCredentials&lt;/span>&lt;span style="color:#f92672">(&lt;/span>cached&lt;span style="color:#f92672">);&lt;/span>
UserAuthenticationResult authenticatedResult &lt;span style="color:#f92672">=&lt;/span> usernameBannedHandler&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">handleUserCredentials&lt;/span>&lt;span style="color:#f92672">(&lt;/span>authenticated&lt;span style="color:#f92672">);&lt;/span>
UserAuthenticationResult failureResult &lt;span style="color:#f92672">=&lt;/span> usernameBannedHandler&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">handleUserCredentials&lt;/span>&lt;span style="color:#f92672">(&lt;/span>failure&lt;span style="color:#f92672">);&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>bannedResult&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>cachedResult&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>authenticatedResult&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>failureResult&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Output:&lt;/p>
&lt;pre>&lt;code>Username: bannedUser
Token: null
IsAuthenticated: false
Username: cachedUser
Token: cachedUserToken
IsAuthenticated: true
Username: authenticatedUser
Token: token
IsAuthenticated: true
Username: authenticateFailure
Token: null
IsAuthenticated: false
&lt;/code>&lt;/pre>&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>&lt;a href="https://github.com/jakehell/Chain-of-Responsibility-Example">Here&lt;/a> is the source of this code on GitHub.&lt;/p></description></item><item><title>Don't Want to Create a Ton of Getters/Setters? Say Hello to the Abstract Document Pattern.</title><link>https://jacobhell.github.io/post/intro-abstract-document-pattern/</link><pubDate>Mon, 23 Mar 2020 00:00:00 +0000</pubDate><guid>https://jacobhell.github.io/post/intro-abstract-document-pattern/</guid><description>&lt;p>In this post, I talk about the Abstract Document pattern, which allows one to pseudo-dynamically create properties for a model. While keeping the type safety that statically typed languages like Java provide.&lt;/p>
&lt;h3 id="type-safety">Type Safety&lt;/h3>
&lt;p>Type safety is an important concept for programming languages. More dynamically typed languages like JavaScript will try to execute almost anything you try at it. Even if an operation between two values will not work on paper. For example:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">foo&lt;/span>(){
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;a&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
}
&lt;span style="color:#a6e22e">foo&lt;/span>();
&lt;span style="color:#75715e">// will return &amp;#34;a1&amp;#34;
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The value of type safety could make developers decide to use statically typed languages.&lt;/p>
&lt;h3 id="downside-of-statically-typed-languages">Downside of Statically Typed Languages&lt;/h3>
&lt;p>One disadvantage of using Statically-typed languages is the loss of flexibility when trying to add new values to a model or class.&lt;/p>
&lt;p>For example, let&amp;rsquo;s say I have a class called &lt;code>Car&lt;/code> with two properties: &lt;code>Paint&lt;/code> and &lt;code>Trim&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Car&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">private&lt;/span> String paint&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">private&lt;/span> String trim&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">getPaint&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> paint&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setPaint&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String paint&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">paint&lt;/span> &lt;span style="color:#f92672">=&lt;/span> paint&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">getTrim&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> trim&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setTrim&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String trim&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">trim&lt;/span> &lt;span style="color:#f92672">=&lt;/span> trim&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Looks good right? This class would be fine if we just wanted to hold onto paint and trim. But what if we want to add the following fields:&lt;/p>
&lt;ul>
&lt;li>Window tint&lt;/li>
&lt;li>Engine type&lt;/li>
&lt;li>Wheel model&lt;/li>
&lt;li>Radiator type&lt;/li>
&lt;li>Has CD Player&lt;/li>
&lt;li>Has Touch Screen&lt;/li>
&lt;li>Plus potentially 1000+ more fields, depending on what the customer is wanting.&lt;/li>
&lt;/ul>
&lt;p>I don&amp;rsquo;t even want to think how big this class is going to get if we tried to implement all these fields!&lt;/p>
&lt;h3 id="implementing-the-abstract-document">Implementing the Abstract Document&lt;/h3>
&lt;p>To describe the Abstract Document, first we must start with an interface that I call &lt;code>Document&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> &lt;span style="color:#a6e22e">Document&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String key&lt;span style="color:#f92672">,&lt;/span> Object value&lt;span style="color:#f92672">);&lt;/span>
Object &lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String key&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Pretty simple interface. Not really different from the default &lt;code>Map&lt;/code> abstract class in Java.&lt;/p>
&lt;p>We will then create a class called &lt;code>Abstract Document&lt;/code> which implements &lt;code>Document&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">abstract&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">AbstractDocument&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> Document &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Map&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">,&lt;/span> Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> properties&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#a6e22e">AbstractDocument&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Map&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">,&lt;/span> Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> properties&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">properties&lt;/span> &lt;span style="color:#f92672">=&lt;/span> properties&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String key&lt;span style="color:#f92672">,&lt;/span> Object value&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
properties&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>key&lt;span style="color:#f92672">,&lt;/span> value&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> Object &lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String key&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> properties&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>key&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>AbstractDocument&lt;/code> is the class that all concrete documents will extend from. Again, this class is pretty simple. Things get exciting when we starting making more classes that extend &lt;code>Document&lt;/code>.&lt;/p>
&lt;p>Before I go further, let me describe what we are trying to accomplish in this scenario. Going back to the &lt;code>Car&lt;/code> class I had before, let&amp;rsquo;s implement a workflow that will allow developers to create a Car that has a &lt;strong>Model&lt;/strong>, &lt;strong>Price&lt;/strong>, and list of &lt;strong>Parts&lt;/strong>. These parts can have their own model and price, and also a &lt;strong>Type&lt;/strong>.&lt;/p>
&lt;h3 id="implementing-our-use-case">Implementing Our Use Case&lt;/h3>
&lt;p>We first begin by adding interfaces that extend &lt;code>Document&lt;/code>. These interfaces should describe a noun that are a property of another noun. Let&amp;rsquo;s start with the model of the car. It is a noun which is a property of the car.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> &lt;span style="color:#a6e22e">HasModel&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> Document &lt;span style="color:#f92672">{&lt;/span>
String &lt;span style="color:#a6e22e">getModel&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Another property we want to add is &lt;strong>Price&lt;/strong>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> &lt;span style="color:#a6e22e">HasPrice&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> Document &lt;span style="color:#f92672">{&lt;/span>
Number &lt;span style="color:#a6e22e">getPrice&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We discussed adding &lt;strong>Parts&lt;/strong> as well. Before adding the interface, remember that each &lt;code>Part&lt;/code> will have it&amp;rsquo;s own &lt;strong>Model&lt;/strong> and &lt;strong>Price&lt;/strong> as well. It will also have a &lt;strong>Type&lt;/strong>, something that a &lt;strong>Car&lt;/strong> will not have. Let&amp;rsquo;s go ahead and create the &lt;code>HasType&lt;/code> interface.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> &lt;span style="color:#a6e22e">HasType&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> Document &lt;span style="color:#f92672">{&lt;/span>
String &lt;span style="color:#a6e22e">getType&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>Part&lt;/code> is going to be our first concrete class. This is where the magic of the &lt;strong>Abstract Document&lt;/strong> is revealed:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Part&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> AbstractDocument &lt;span style="color:#66d9ef">implements&lt;/span> HasType&lt;span style="color:#f92672">,&lt;/span> HasModel&lt;span style="color:#f92672">,&lt;/span> HasPrice &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#a6e22e">Part&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Map&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">,&lt;/span> Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> properties&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">super&lt;/span>&lt;span style="color:#f92672">(&lt;/span>properties&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> Number &lt;span style="color:#a6e22e">getPrice&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#f92672">(&lt;/span>Number&lt;span style="color:#f92672">)&lt;/span> properties&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Property&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">PRICE&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">getModel&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">)&lt;/span> properties&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Property&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">MODEL&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">getType&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">)&lt;/span> properties&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Property&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">TYPE&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>When creating the concrete classes, remember that we must extend &lt;code>AbstractDocument&lt;/code>. Every &lt;code>Document&lt;/code> that we add as well we must implement. You can implement as many Documents you want.&lt;/p>
&lt;p>Lastly, let&amp;rsquo;s create the &lt;code>Car&lt;/code> concrete class.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Car&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> AbstractDocument &lt;span style="color:#66d9ef">implements&lt;/span> HasModel&lt;span style="color:#f92672">,&lt;/span> HasPrice&lt;span style="color:#f92672">,&lt;/span> HasParts &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#a6e22e">Car&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Map&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">,&lt;/span> Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> properties&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">super&lt;/span>&lt;span style="color:#f92672">(&lt;/span>properties&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>Part&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">getParts&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#a6e22e">@SuppressWarnings&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;unchecked&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
List&lt;span style="color:#f92672">&amp;lt;&lt;/span>Map&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">,&lt;/span> Object&lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span> parts &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>List&lt;span style="color:#f92672">&amp;lt;&lt;/span>Map&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">,&lt;/span> Object&lt;span style="color:#f92672">&amp;gt;&amp;gt;)&lt;/span> properties&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Property&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">PARTS&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> parts&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">stream&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">map&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Part&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#a6e22e">collect&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Collectors&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toList&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> Number &lt;span style="color:#a6e22e">getPrice&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#f92672">(&lt;/span>Number&lt;span style="color:#f92672">)&lt;/span> properties&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Property&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">PRICE&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">getModel&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">)&lt;/span> properties&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Property&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">MODEL&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="bringing-it-all-together">Bringing it all Together&lt;/h3>
&lt;p>Now that we have got the &lt;strong>Abstract Document&lt;/strong> implemented with concrete classes, let&amp;rsquo;s get a simple client working.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Main&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">[]&lt;/span> args&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
var engine &lt;span style="color:#f92672">=&lt;/span> Map&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">of&lt;/span>&lt;span style="color:#f92672">(&lt;/span>
Property&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">MODEL&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Model 1&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
Property&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">PRICE&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> 200&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">00&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
Property&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">TYPE&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Engine&amp;#34;&lt;/span>
&lt;span style="color:#f92672">);&lt;/span>
var muffler &lt;span style="color:#f92672">=&lt;/span> Map&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">of&lt;/span>&lt;span style="color:#f92672">(&lt;/span>
Property&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">TYPE&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Muffler&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
Property&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">PRICE&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> 100&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">00&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
Property&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">MODEL&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Model 2&amp;#34;&lt;/span>
&lt;span style="color:#f92672">);&lt;/span>
var carProperties &lt;span style="color:#f92672">=&lt;/span> Map&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">of&lt;/span>&lt;span style="color:#f92672">(&lt;/span>
Property&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">MODEL&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Fast car&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
Property&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">PRICE&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> 50000&lt;span style="color:#f92672">,&lt;/span>
Property&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">PARTS&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> List&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">of&lt;/span>&lt;span style="color:#f92672">(&lt;/span>engine&lt;span style="color:#f92672">,&lt;/span> muffler&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#f92672">);&lt;/span>
var car &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Car&lt;span style="color:#f92672">(&lt;/span>carProperties&lt;span style="color:#f92672">);&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>car&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getModel&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>car&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getPrice&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
car&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getParts&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">forEach&lt;/span>&lt;span style="color:#f92672">(&lt;/span>part &lt;span style="color:#f92672">-&amp;gt;&lt;/span> System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>part&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getModel&lt;/span>&lt;span style="color:#f92672">()));&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Output:&lt;/p>
&lt;pre>&lt;code>Fast car
50000
Model 1
Model 2
&lt;/code>&lt;/pre>&lt;h3 id="conclusion">Conclusion&lt;/h3>
&lt;p>Thanks for reading!&lt;/p>
&lt;p>I have created a GitHub repo with the source for this post. Please &lt;a href="https://github.com/jakehell/AbstractDocumentPatternExample">go here&lt;/a> to view it.&lt;/p></description></item></channel></rss>