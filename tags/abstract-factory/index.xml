<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>abstract factory on Jacob Hell's Blog</title><link>https://jacobhell.github.io/tags/abstract-factory/</link><description>Recent content in abstract factory on Jacob Hell's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 19 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://jacobhell.github.io/tags/abstract-factory/index.xml" rel="self" type="application/rss+xml"/><item><title>Have a lot of if/else Statements Doing Similar Things? Use an Abstract Factory!</title><link>https://jacobhell.github.io/post/using-abstract-factory-pattern/</link><pubDate>Thu, 19 Mar 2020 00:00:00 +0000</pubDate><guid>https://jacobhell.github.io/post/using-abstract-factory-pattern/</guid><description>&lt;p>When working on a legacy system, one of the more common problems I see is similar actions happening within if/else or control statements.&lt;/p>
&lt;p>Take this code snippet for example:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> LedgerEntry &lt;span style="color:#a6e22e">getLedgerEntry&lt;/span>&lt;span style="color:#f92672">(&lt;/span>TransactionDetails details&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#f92672">{&lt;/span>
LedgerEntry entry &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
String transactionType &lt;span style="color:#f92672">=&lt;/span> details&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getTransactionType&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>transactionType&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;check&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
entry &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> CheckEntry&lt;span style="color:#f92672">();&lt;/span>
entry&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setCheckType&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;check&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
entry&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setCheckPurchaser&lt;/span>&lt;span style="color:#f92672">(&lt;/span>details&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getPurchaser&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
entry&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setCheckDate&lt;/span>&lt;span style="color:#f92672">(&lt;/span>details&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getDate&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
entry&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setRoutingNumber&lt;/span>&lt;span style="color:#f92672">(&lt;/span>details&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getRoutingNumber&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
entry&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setAccountNumber&lt;/span>&lt;span style="color:#f92672">(&lt;/span>details&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getAccountNumber&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>transactionType&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;creditcard&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
entry &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> CreditCardLedgerEntry&lt;span style="color:#f92672">();&lt;/span>
entry&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setType&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;creditcard&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
entry&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setCreditCardPurchaser&lt;/span>&lt;span style="color:#f92672">(&lt;/span>details&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getPurchaser&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
entry&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setCreditCardDate&lt;/span>&lt;span style="color:#f92672">(&lt;/span>details&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getDate&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
entry&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setCreditCardNumber&lt;/span>&lt;span style="color:#f92672">(&lt;/span>details&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getCreditCardNumber&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>transactionType&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;cash&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
entry &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> CashEntry&lt;span style="color:#f92672">();&lt;/span>
entry&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setType&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;cash&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
entry&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setCashPurchaser&lt;/span>&lt;span style="color:#f92672">(&lt;/span>details&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getPurchaser&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
entry&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setCashDate&lt;/span>&lt;span style="color:#f92672">(&lt;/span>details&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getDate&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>transactionType&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;crypto&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
entry &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> CryptoEntry&lt;span style="color:#f92672">();&lt;/span>
entry&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setType&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;crypto&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
entry&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setCryptoPurchaser&lt;/span>&lt;span style="color:#f92672">(&lt;/span>details&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getPurchaser&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
entry&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setCryptoDate&lt;/span>&lt;span style="color:#f92672">(&lt;/span>details&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getDate&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
entry&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setCyrptoPublicKey&lt;/span>&lt;span style="color:#f92672">(&lt;/span>details&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getPublicKey&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> entry&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let&amp;rsquo;s say that this snippet is from a larger accounting program that will save financial records to a database.&lt;/p>
&lt;p>This method is doing the following:&lt;/p>
&lt;ol>
&lt;li>Determining what type of transaction occurred based on the transaction type&lt;/li>
&lt;li>Creating a concrete instance of the &lt;code>LedgerEntry&lt;/code> abstract class&lt;/li>
&lt;li>Returning this entry&lt;/li>
&lt;/ol>
&lt;p>This method probably works fine, but what if we needed to do something for both cash and cryptocurrency transactions:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> LedgerEntry &lt;span style="color:#a6e22e">getLedgerEntry&lt;/span>&lt;span style="color:#f92672">(&lt;/span>TransactionDetails details&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#75715e">// previous code
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>transactionType&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;cash&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">||&lt;/span> transactionType&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;crypto&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span>
&lt;span style="color:#f92672">{&lt;/span>
entry&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setAlertFBIAndPresidentOfUSA&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> entry&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And what if further we needed to do something special to other transaction types? This could get complicated fast.&lt;/p>
&lt;p>My go to solution for problems such as this to use the &lt;strong>Abstract Factory Pattern&lt;/strong>. This is one of the patterns found in the famous book: &lt;a href="https://www.amazon.com/Design-Patterns-Object-Oriented-Addison-Wesley-Professional-ebook/dp/B000SEIBB8">Design Patterns: Elements of Reusable Object-Oriented Software&lt;/a>.&lt;/p>
&lt;p>The Abstract Factory Pattern relies on the client creating a &lt;strong>Factory&lt;/strong> and then calling the abstract method &lt;strong>create&lt;/strong>.&lt;/p>
&lt;p>The nice thing about this is the client doesn&amp;rsquo;t have to know about the inner workings of each create method.&lt;/p>
&lt;p>Let&amp;rsquo;s see what this method looks like after using the Abstract Factory Pattern:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> LedgerEntry &lt;span style="color:#a6e22e">getLedgerEntry&lt;/span>&lt;span style="color:#f92672">(&lt;/span>TransactionDetails details&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#f92672">{&lt;/span>
AbstractLedgerFactory ledgerFactory &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
String transactionType &lt;span style="color:#f92672">=&lt;/span> details&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getTransactionType&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>transactionType&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;check&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
ledgerFactory &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> CheckLedgerFactory&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>transactionType&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;creditcard&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
ledgerFactory &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> CreditCardLedgerFactory&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>transactionType&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;cash&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
ledgerFactory &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> CashLedgerFactory&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>transactionType&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;crypto&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
ledgerFactory &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> CryptoLedgerFactory&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> ledgerFactory&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">create&lt;/span>&lt;span style="color:#f92672">(&lt;/span>details&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Much easier to read! And if more logic needs to happen for transaction types, it can be done in the concrete factory method.&lt;/p>
&lt;p>Here is the &lt;code>AbstractLedgerFactory&lt;/code> and &lt;code>CryptoLedgerFactory&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">abstract&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">AbstractLedgerFactory&lt;/span>
&lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">abstract&lt;/span> LedgerEntry &lt;span style="color:#a6e22e">create&lt;/span>&lt;span style="color:#f92672">(&lt;/span>TransactionDetails details&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">CryptoLedgerFactory&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> AbstractLedgerFactory
&lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> LedgerEntry &lt;span style="color:#a6e22e">create&lt;/span>&lt;span style="color:#f92672">(&lt;/span>TransactionDetails details&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#f92672">{&lt;/span>
LedgerEntry entry &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> CryptoEntry&lt;span style="color:#f92672">();&lt;/span>
entry&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setType&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;crypto&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
entry&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setCryptoPurchaser&lt;/span>&lt;span style="color:#f92672">(&lt;/span>details&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getPurchaser&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
entry&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setCryptoDate&lt;/span>&lt;span style="color:#f92672">(&lt;/span>details&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getDate&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
entry&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setCyrptoPublicKey&lt;/span>&lt;span style="color:#f92672">(&lt;/span>details&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getPublicKey&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
entry&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setAlertFBIAndPresidentOfUSA&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> entry&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>